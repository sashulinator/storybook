import { ForwardedRef, forwardRef } from 'react'

import { Id, c } from '~/utils/core'
import { useMeasure } from '~/utils/hooks'
import { setRefs } from '~/utils/react'

export interface Props extends Omit<React.HTMLAttributes<HTMLDivElement>, 'children'> {
  /**
   * –î–µ—Ç–∏
   */
  children: React.ReactNode

  /**
   * –ü–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–æ–Ω–≤–µ –ø–æ X
   */
  x: number | string

  /**
   * –ü–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–æ–Ω–≤–µ –ø–æ X
   */
  y: number | string

  /**
   * Id –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
   * –ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Ü–µ–Ω—Ç—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω–≤—ã –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–µ
   */
  dataId: Id

  /**
   * –ü—Ä–æ–ø—Å—ã –¥–ª—è –æ–±–µ—Ä—Ç–∫–∏ SVGForeignObjectElement
   */
  rootProps?: React.HTMLAttributes<SVGForeignObjectElement>
}

const displayName = 'a-Canvas-w-Item'

/**
 * Canvas Item Component
 * –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç HTMLElement'—ã –≤ –∑–∞–¥–∞–Ω–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö
 *
 * üî¥ –í–Ω—É—Ç—Ä–∏ foreignObject –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å CSS —Å–≤–æ–π—Å—Ç–≤–∞ position –∏ transform
 * —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤ Safary
 */
function Component(props: Props, ref: ForwardedRef<HTMLDivElement>): JSX.Element {
  const { x, y, dataId, rootProps, ...divProps } = props

  const [setMeasureRef, { height, width }] = useMeasure()

  return (
    <foreignObject data-id={dataId} x={x} y={y} height={height} width={width} {...rootProps}>
      <div
        {...divProps}
        className={c(props.className, displayName)}
        style={{ height: 'fit-content', width: 'fit-content', ...props.style }}
        ref={setRefs(setMeasureRef, ref)}
      >
        {props.children}
      </div>
    </foreignObject>
  )
}

const ForwardRef = forwardRef(Component)
ForwardRef.displayName = displayName
export default ForwardRef
